"data struct"
(1, 2*3,1-(3+2))
[1, 2*3,1-(3+2), "abcd", [1,2,3]]
c = 3
{"a":1, "b":2, "c":1+2}
{"a":1, "b":2, "c":c}


"assign"
c = a = 1 + 2
a
c

"binary exp"
1+ 2/3 -5 + 2 * (3+1/2)
1+ 2/3 -(5 + 2 * (3+1/2))


"lst = [1, 3, 7, 2, 4, 6, 0, 2:16:3, 1:14]"
lst = [1, 3, 7, 2, \
    4, 6, 0, 
    2:16:3, 1:14]
"lst"
lst
"lst[0,3,5]"
lst[0,3,5]
[1,2,3] + [4,5,6]

print("####################################")
for (x in lst)
    print(x)
end
print("####################################")




print("###-#####-######")

1 + 1 == 2

print("###-#####-######")

"""def qsort(lst)
        lt = lambda (x,y): x<y
        gt = lambda (x,y): x>y
        eq = lambda (x,y): x==y
        if (len(lst) <= 1)
            return lst
        end
        leftpart = list(filter(lt(_, lst[0]), lst))
        rightpart = list(filter(gt(_, lst[0]), lst))
        eqpart = list(filter(eq(_, lst[0]), lst))
        return  qsort(leftpart) + eqpart + qsort(rightpart)
    end"""

def qsort(lst)
    lt = lambda (x,y): x<y
    gt = lambda (x,y): x>y
    eq = lambda (x,y): x==y
    if (len(lst) <= 1)
        return lst
    end
    leftpart = list(filter(lt(_, lst[0]), lst))
    rightpart = list(filter(gt(_, lst[0]), lst))
    eqpart = list(filter(eq(_, lst[0]), lst))
    return  qsort(leftpart) + eqpart + qsort(rightpart)
end

"qsort(lst)"

qsort(lst)


ls(".") | head
a = ls(".") 
filter(lambda (x):len(x) > 3, a)
ls(".") | filter(lambda (x):len(x) > 3, _) | list
